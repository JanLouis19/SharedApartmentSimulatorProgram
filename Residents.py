# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Residents.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *
from PyQt5.uic import loadUi
from PyQt5.QtCore import *
from PyQt5.QtGui import *
import sys
from MainWindow import *
import time


class okaResidentt:
    def __init__(self, name, room, x_home, x_bathroom):  # room = 1;2;3;4  --  Each number represents a part of the apartment, meaning in which part
        self.name = name                                                   # of the apartment the room is located, so which bathroom is the preferred one
        self.room = room
        self.x_home = "t"
        self.x_bathroom = "f"


# ----- these are True/False Statements whether the bathrooms are occupied or not (t = true = occupied, f= false = not occupied -----
bathBigVF = "f"
bathSmallVF = "f"
bathTopVF = "f"
label_ind = "1"


# ----- Every resident is launched as own thread, being declared here (descriptions only in the first worker class 'Worker') -----
# -----  -----
class Worker(QThread):
    # ----- declaration of signals that are sent out under certain circumstances-----
    signalMatheus1_1 = QtCore.pyqtSignal()
    signalMatheus1_2 = QtCore.pyqtSignal()
    signalMatheus2_1 = QtCore.pyqtSignal()
    signalMatheus2_2 = QtCore.pyqtSignal()
    signalMatheus3_1 = QtCore.pyqtSignal()
    signalMatheus3_2 = QtCore.pyqtSignal()
    signalMatheus4_1 = QtCore.pyqtSignal()
    signalMatheus4_2 = QtCore.pyqtSignal()

    # ----- Run Method -----
    def run(self):
        Matheus = okaResidentt("Matheus", "1", "t", "f")
        count = 1    # ----- (could also be while True), no functionality -----
        homeVF = "t"   # ----- whether the Resident is at home (t = true) or not at home (f = false) -----
        bathVF = "f"   # ----- whether the Resident is in any bathroom right now or not (t/f) -----
        bathBigVFmath = "f"   # ----- whether the Resident is in the big bathroom (t/f) -----
        bathSmallVFmath = "f"   # ----- whether the Resident is in the small bathroom (t/f)
        bathTopVFmath = "f"    # ----- whether the Resident is in the top bathroom (t/f)

        # ----- getting the global values of whether the bathrooms are occupied or not -----
        global bathBigVF
        global bathSmallVF
        global bathTopVF
        while count == 1:
            # ----- in this loop, the resident(player) runs one of the 4 different play-methods every 1 second (which play method depends on the location
            # of the room of the resident), depending on the result of the play method, an action might be performed -----
            x = Ui_Form.play2(self, Matheus)
            if x == "HomeOut" and homeVF == "t" and bathVF == "f":   # ----- if the result of play is HomeOut (leave the house) and the resident is
                print(f"Matheus  {x}")                                     # at home right now and he is not in a bathroom right now
                homeVF = "f"          #----- the resident gets marked as not at home
                self.signalMatheus1_1.emit()   #----- the signal to leave the house is emitted
            elif x == "HomeIn" and homeVF == "f" and bathVF == "f":     #----- same but for entering the house
                print(f"Matheus  {x}")
                homeVF = "t"
                self.signalMatheus1_2.emit()
            elif x == "BathBigOut" and homeVF == "t" and bathBigVFmath == "t" and bathVF == "t":    #----- if the result of play method is BathBigOut
                print(f"Matheus  {x}")                                                              #(leave the big bathroom) and the resident is at home and
                bathBigVF = "f"                                                                     # he is in the big bathroom and in a bathroom in general
                bathVF = "f"
                bathBigVFmath = "f"
                self.signalMatheus2_1.emit()    #----- the resident and the bathroom get marked correctly and the signal is emitted
            elif x == "BathBigIn" and homeVF == "t" and bathVF == "f" and bathBigVF == "f":     #----- same but for entering the big bathroom
                print(f"Matheus  {x}")
                bathVF = "t"
                bathBigVF = "t"
                bathBigVFmath = "t"
                self.signalMatheus2_2.emit()
            elif x == "BathSmallOut" and homeVF == "t" and bathSmallVFmath == "t" and bathVF == "t":
                print(f"Matheus  {x}")
                bathVF = "f"
                bathSmallVF = "f"
                bathSmallVFmath = "f"
                self.signalMatheus3_1.emit()
            elif x == "BathSmallIn" and homeVF == "t" and bathVF == "f" and bathSmallVF == "f":
                print(f"Matheus  {x}")
                if bathBigVF == "f":  #----- the method returned that the resident should enter the small bathroom, but as he prefers the big bathroom
                    bathVF = "t"      #----- due to the location of his room, it is checked whether the big bathroom is also available, if so then he enters
                    bathBigVF = "t"   #----- the big bathroom instead and this signal is also emitted
                    bathBigVFmath = "t"
                    self.signalMatheus2_2.emit()
                else:
                    bathVF = "t"     #----- if the big bathroom is not available, the resident follows the result of the play method and enters the small bathroom
                    bathSmallVF = "t"
                    bathSmallVFmath = "f"
                    self.signalMatheus3_2.emit()
            elif x == "BathTopOut" and homeVF == "t" and bathTopVFmath == "t" and bathVF == "t":
                print(f"Matheus  {x}")
                bathVF = "f"
                bathTopVF = "f"
                bathTopVFmath = "f"
                self.signalMatheus4_1.emit()
            elif x == "BathTopIn" and homeVF == "t" and bathVF == "f" and bathTopVF == "f":
                print(f"Matheus  {x}")
                if bathBigVF == "f":        #----- same procedure as before, if possible the resident tries to enter the big bathroom, if possible
                    bathVF = "t"
                    bathBigVF = "t"
                    bathBigVFmath = "t"
                    self.signalMatheus2_2.emit()
                else:
                    bathVF = "t"
                    bathTopVF = "t"
                    bathTopVFmath = "t"
                    self.signalMatheus4_2.emit()
            time.sleep(1.0)     #----- after 1 second, the loop restarts


class Worker2(QThread):
    # ----- The procedure is explained in the worker class 1 above, nothing changed except possibly the preference of the bathrooms due to the -----
    # ----- location of the room -----
    signalLuan1_1 = QtCore.pyqtSignal()
    signalLuan1_2 = QtCore.pyqtSignal()
    signalLuan2_1 = QtCore.pyqtSignal()
    signalLuan2_2 = QtCore.pyqtSignal()
    signalLuan3_1 = QtCore.pyqtSignal()
    signalLuan3_2 = QtCore.pyqtSignal()
    signalLuan4_1 = QtCore.pyqtSignal()
    signalLuan4_2 = QtCore.pyqtSignal()

    def run(self):
        Luan = okaResidentt("Luan", "1", "t", "f")
        count = 1
        homeVF = "t"
        bathVF = "f"
        bathBigVFluan = "f"
        bathSmallVFluan = "f"
        bathTopVFluan = "f"
        global bathBigVF
        global bathSmallVF
        global bathTopVF
        while count == 1:
            x = Ui_Form.play2(self, Luan)
            if x == "HomeOut" and homeVF == "t" and bathVF == "f":
                print(f"Luan  {x}")
                homeVF = "f"
                self.signalLuan1_1.emit()
            elif x == "HomeIn" and homeVF == "f" and bathVF == "f":
                print(f"Luan  {x}")
                homeVF = "t"
                self.signalLuan1_2.emit()
            elif x == "BathBigOut" and homeVF == "t" and bathVF == "t" and bathBigVFluan == "t":
                print(f"Luan  {x}")
                bathBigVF = "f"
                bathVF = "f"
                bathBigVFluan = "f"
                self.signalLuan2_1.emit()
            elif x == "BathBigIn" and homeVF == "t" and bathVF == "f" and bathBigVF == "f":
                print(f"Luan  {x}")
                bathVF = "t"
                bathBigVF = "t"
                bathBigVFluan = "t"
                self.signalLuan2_2.emit()
            elif x == "BathSmallOut" and homeVF == "t" and bathSmallVFluan == "t" and bathVF == "t":
                print(f"Luan  {x}")
                bathVF = "f"
                bathSmallVF = "f"
                bathSmallVFluan = "f"
                self.signalLuan3_1.emit()
            elif x == "BathSmallIn" and homeVF == "t" and bathVF == "f" and bathSmallVF == "f":
                print(f"Luan  {x}")
                if bathBigVF == "f":
                    bathVF = "t"
                    bathBigVF = "t"
                    bathBigVFluan = "t"
                    self.signalLuan2_2.emit()
                else:
                    bathVF = "t"
                    bathSmallVF = "t"
                    bathSmallVFluan = "t"
                    self.signalLuan3_2.emit()
            elif x == "BathTopOut" and homeVF == "t" and bathTopVFluan == "t" and bathVF == "t":
                print(f"Luan  {x}")
                bathVF = "f"
                bathTopVF = "f"
                bathTopVFluan = "f"
                self.signalLuan4_1.emit()
            elif x == "BathTopIn" and homeVF == "t" and bathVF == "f" and bathTopVF == "f":
                print(f"Luan  {x}")
                if bathBigVF == "f":
                    bathVF = "t"
                    bathBigVF = "t"
                    bathBigVFluan = "t"
                    self.signalLuan2_2.emit()
                else:
                    bathVF = "t"
                    bathTopVF = "t"
                    bathTopVFluan = "t"
                    self.signalLuan4_2.emit()
            time.sleep(1.0)


class Worker3(QThread):
    # ----- The procedure is explained in the worker class 1 above, nothing changed except possibly the preference of the bathrooms due to the -----
    # ----- location of the room -----
    signalIzabella1_1 = QtCore.pyqtSignal()
    signalIzabella1_2 = QtCore.pyqtSignal()
    signalIzabella2_1 = QtCore.pyqtSignal()
    signalIzabella2_2 = QtCore.pyqtSignal()
    signalIzabella3_1 = QtCore.pyqtSignal()
    signalIzabella3_2 = QtCore.pyqtSignal()
    signalIzabella4_1 = QtCore.pyqtSignal()
    signalIzabella4_2 = QtCore.pyqtSignal()

    def run(self):
        Izabella = okaResidentt("Izabella", "1", "t", "f")
        count = 1
        homeVF = "t"
        bathVF = "f"
        bathBigVFiza = "f"
        bathSmallVFiza = "f"
        bathTopVFiza = "f"
        global bathBigVF
        global bathSmallVF
        global bathTopVF
        while count == 1:
            x = Ui_Form.play4(self, Izabella)
            if x == "HomeOut" and homeVF == "t" and bathVF == "f":
                print(f"Izabella  {x}")
                homeVF = "f"
                self.signalIzabella1_1.emit()
            elif x == "HomeIn" and homeVF == "f" and bathVF == "f":
                print(f"Izabella  {x}")
                homeVF = "t"
                self.signalIzabella1_2.emit()
            elif x == "BathBigOut" and homeVF == "t" and bathVF == "t" and bathBigVFiza == "t":
                print(f"Izabella  {x}")
                bathBigVF = "f"
                bathVF = "f"
                bathBigVFiza = "f"
                self.signalIzabella2_1.emit()
            elif x == "BathBigIn" and homeVF == "t" and bathVF == "f" and bathBigVF == "f":
                print(f"Izabella  {x}")
                if bathTopVF == "f":
                    bathVF = "t"
                    bathTopVF = "t"
                    bathTopVFiza = "t"
                    self.signalIzabella4_2.emit()
                else:
                    bathVF = "t"
                    bathBigVF = "t"
                    bathBigVFiza = "t"
                    self.signalIzabella2_2.emit()
            elif x == "BathSmallOut" and homeVF == "t" and bathSmallVFiza == "t" and bathVF == "t":
                print(f"Izabella  {x}")
                bathVF = "f"
                bathSmallVF = "f"
                bathSmallVFiza = "f"
                self.signalIzabella3_1.emit()
            elif x == "BathSmallIn" and homeVF == "t" and bathVF == "f" and bathSmallVF == "f":
                print(f"Izabella  {x}")
                if bathTopVF == "f":
                    bathVF = "t"
                    bathTopVF = "t"
                    bathTopVFiza = "t"
                    self.signalIzabella4_2.emit()
                else:
                    bathVF = "t"
                    bathSmallVF = "t"
                    bathSmallVFiza = "t"
                    self.signalIzabella3_2.emit()
            elif x == "BathTopOut" and homeVF == "t" and bathTopVFiza == "t" and bathVF == "t":
                print(f"Izabella  {x}")
                bathVF = "f"
                bathTopVF = "f"
                bathTopVFiza = "f"
                self.signalIzabella4_1.emit()
            elif x == "BathTopIn" and homeVF == "t" and bathVF == "f" and bathTopVF == "f":
                print(f"Izabella  {x}")
                bathVF = "t"
                bathTopVF = "t"
                bathTopVFiza = "t"
                self.signalIzabella4_2.emit()
            time.sleep(1.0)


class Worker4(QThread):
    # ----- The procedure is explained in the worker class 1 above, nothing changed except possibly the preference of the bathrooms due to the -----
    # ----- location of the room -----
    signalJoao1_1 = QtCore.pyqtSignal()
    signalJoao1_2 = QtCore.pyqtSignal()
    signalJoao2_1 = QtCore.pyqtSignal()
    signalJoao2_2 = QtCore.pyqtSignal()
    signalJoao3_1 = QtCore.pyqtSignal()
    signalJoao3_2 = QtCore.pyqtSignal()
    signalJoao4_1 = QtCore.pyqtSignal()
    signalJoao4_2 = QtCore.pyqtSignal()

    def run(self):
        Joao = okaResidentt("Joao", "1", "t", "f")
        count = 1
        homeVF = "t"
        bathVF = "f"
        bathBigVFjoao = "f"
        bathSmallVFjoao = "f"
        bathTopVFjoao = "f"
        global bathBigVF
        global bathSmallVF
        global bathTopVF
        while count == 1:
            x = Ui_Form.play4(self, Joao)
            if x == "HomeOut" and homeVF == "t" and bathVF == "f":
                print(f"Joao  {x}")
                homeVF = "f"
                self.signalJoao1_1.emit()
            elif x == "HomeIn" and homeVF == "f" and bathVF == "f":
                print(f"Joao  {x}")
                homeVF = "t"
                self.signalJoao1_2.emit()
            elif x == "BathBigOut" and homeVF == "t" and bathVF == "t" and bathBigVFjoao == "t":
                print(f"Joao  {x}")
                bathBigVF = "f"
                bathVF = "f"
                bathBigVFjoao = "f"
                self.signalJoao2_1.emit()
            elif x == "BathBigIn" and homeVF == "t" and bathVF == "f" and bathBigVF == "f":
                print(f"Joao  {x}")
                if bathTopVF == "f":
                    bathVF = "t"
                    bathTopVF = "t"
                    bathTopVFjoao = "t"
                    self.signalJoao4_2.emit()
                else:
                    bathVF = "t"
                    bathBigVF = "t"
                    bathBigVFjoao = "t"
                    self.signalJoao2_2.emit()
            elif x == "BathSmallOut" and homeVF == "t" and bathSmallVFjoao == "t" and bathVF == "t":
                print(f"Joao  {x}")
                bathVF = "f"
                bathSmallVF = "f"
                bathSmallVFjoao = "f"
                self.signalJoao3_1.emit()
            elif x == "BathSmallIn" and homeVF == "t" and bathVF == "f" and bathSmallVF == "f":
                print(f"Joao  {x}")
                if bathTopVF == "f":
                    bathVF = "t"
                    bathTopVF = "t"
                    bathTopVFjoao = "t"
                    self.signalJoao4_2.emit()
                else:
                    bathVF = "t"
                    bathSmallVF = "t"
                    bathSmallVFjoao = "t"
                    self.signalJoao3_2.emit()
            elif x == "BathTopOut" and homeVF == "t" and bathTopVFjoao == "t" and bathVF == "t":
                print(f"Joao  {x}")
                bathVF = "f"
                bathTopVF = "f"
                bathTopVFjoao = "f"
                self.signalJoao4_1.emit()
            elif x == "BathTopIn" and homeVF == "t" and bathVF == "f" and bathTopVF == "f":
                print(f"Joao  {x}")
                bathVF = "t"
                bathTopVF = "t"
                bathTopVFjoao = "t"
                self.signalJoao4_2.emit()
            time.sleep(1.0)


class Worker5(QThread):
    # ----- The procedure is explained in the worker class 1 above, nothing changed except possibly the preference of the bathrooms due to the -----
    # ----- location of the room -----
    signalManuela1_1 = QtCore.pyqtSignal()
    signalManuela1_2 = QtCore.pyqtSignal()
    signalManuela2_1 = QtCore.pyqtSignal()
    signalManuela2_2 = QtCore.pyqtSignal()
    signalManuela3_1 = QtCore.pyqtSignal()
    signalManuela3_2 = QtCore.pyqtSignal()
    signalManuela4_1 = QtCore.pyqtSignal()
    signalManuela4_2 = QtCore.pyqtSignal()

    def run(self):
        Manuela = okaResidentt("Manuela", "1", "t", "f")
        count = 1
        homeVF = "t"
        bathVF = "f"
        bathBigVFmanu = "f"
        bathSmallVFmanu = "f"
        bathTopVFmanu = "f"
        global bathBigVF
        global bathSmallVF
        global bathTopVF
        while count == 1:
            x = Ui_Form.play3(self, Manuela)
            if x == "HomeOut" and homeVF == "t" and bathVF == "f":
                print(f"Manuela  {x}")
                homeVF = "f"
                self.signalManuela1_1.emit()
            elif x == "HomeIn" and homeVF == "f" and bathVF == "f":
                print(f"Manuela  {x}")
                homeVF = "t"
                self.signalManuela1_2.emit()
            elif x == "BathBigOut" and homeVF == "t" and bathVF == "t" and bathBigVFmanu == "t":
                print(f"Manuela  {x}")
                bathBigVF = "f"
                bathVF = "f"
                bathBigVFmanu = "f"
                self.signalManuela2_1.emit()
            elif x == "BathBigIn" and homeVF == "t" and bathVF == "f" and bathBigVF == "f":
                print(f"Manuela  {x}")
                if bathSmallVF == "f":
                    bathVF = "t"
                    bathSmallVF = "t"
                    bathSmallVFmanu = "t"
                    self.signalManuela3_2.emit()
                else:
                    bathVF = "t"
                    bathBigVF = "t"
                    bathBigVFmanu = "t"
                    self.signalManuela2_2.emit()
            elif x == "BathSmallOut" and homeVF == "t" and bathSmallVFmanu == "t" and bathVF == "t":
                print(f"Manuela  {x}")
                bathVF = "f"
                bathSmallVF = "f"
                bathSmallVFmanu = "f"
                self.signalManuela3_1.emit()
            elif x == "BathSmallIn" and homeVF == "t" and bathVF == "f" and bathSmallVF == "f":
                print(f"Manuela  {x}")
                bathVF = "t"
                bathSmallVF = "t"
                bathSmallVFmanu = "t"
                self.signalManuela3_2.emit()
            elif x == "BathTopOut" and homeVF == "t" and bathTopVFmanu == "t" and bathVF == "t":
                print(f"Manuela  {x}")
                bathVF = "f"
                bathTopVF = "f"
                bathTopVFmanu = "f"
                self.signalManuela4_1.emit()
            elif x == "BathTopIn" and homeVF == "t" and bathVF == "f" and bathTopVF == "f":
                print(f"Manuela  {x}")
                if bathSmallVF == "f":
                    bathVF = "t"
                    bathSmallVF = "t"
                    bathSmallVFmanu = "t"
                    self.signalManuela3_2.emit()
                else:
                    bathVF = "t"
                    bathTopVF = "t"
                    bathTopVFmanu = "t"
                    self.signalManuela4_2.emit()
            time.sleep(1.0)


class Worker6(QThread):
    # ----- The procedure is explained in the worker class 1 above, nothing changed except possibly the preference of the bathrooms due to the -----
    # ----- location of the room -----
    signalMaria1_1 = QtCore.pyqtSignal()
    signalMaria1_2 = QtCore.pyqtSignal()
    signalMaria2_1 = QtCore.pyqtSignal()
    signalMaria2_2 = QtCore.pyqtSignal()
    signalMaria3_1 = QtCore.pyqtSignal()
    signalMaria3_2 = QtCore.pyqtSignal()
    signalMaria4_1 = QtCore.pyqtSignal()
    signalMaria4_2 = QtCore.pyqtSignal()

    def run(self):
        Maria = okaResidentt("Maria", "1", "t", "f")
        count = 1
        homeVF = "t"
        bathVF = "f"
        bathBigVFmr = "f"
        bathSmallVFmr = "f"
        bathTopVFmr = "f"
        global bathBigVF
        global bathSmallVF
        global bathTopVF
        while count == 1:
            x = Ui_Form.play2(self, Maria)
            if x == "HomeOut" and homeVF == "t" and bathVF == "f":
                print(f"Maria  {x}")
                homeVF = "f"
                self.signalMaria1_1.emit()
            elif x == "HomeIn" and homeVF == "f" and bathVF == "f":
                print(f"Maria  {x}")
                homeVF = "t"
                self.signalMaria1_2.emit()
            elif x == "BathBigOut" and homeVF == "t" and bathVF == "t" and bathBigVFmr == "t":
                print(f"Maria  {x}")
                bathBigVF = "f"
                bathVF = "f"
                bathBigVFmr = "f"
                self.signalMaria2_1.emit()
            elif x == "BathBigIn" and homeVF == "t" and bathVF == "f" and bathBigVF == "f":
                print(f"Maria  {x}")
                bathVF = "t"
                bathBigVF = "t"
                bathBigVFmr = "t"
                self.signalMaria2_2.emit()
            elif x == "BathSmallOut" and homeVF == "t" and bathSmallVFmr == "t" and bathVF == "t":
                print(f"Maria  {x}")
                bathVF = "f"
                bathSmallVF = "f"
                bathSmallVFmr = "f"
                self.signalMaria3_1.emit()
            elif x == "BathSmallIn" and homeVF == "t" and bathVF == "f" and bathSmallVF == "f":
                print(f"Maria  {x}")
                if bathBigVF == "f":
                    bathVF = "t"
                    bathBigVF = "t"
                    bathBigVFmr = "t"
                    self.signalMaria2_2.emit()
                else:
                    bathVF = "t"
                    bathSmallVF = "t"
                    bathSmallVFmr = "t"
                    self.signalMaria3_2.emit()
            elif x == "BathTopOut" and homeVF == "t" and bathTopVFmr == "t" and bathVF == "t":
                print(f"Maria  {x}")
                bathVF = "f"
                bathTopVF = "f"
                bathTopVFmr = "f"
                self.signalMaria4_1.emit()
            elif x == "BathTopIn" and homeVF == "t" and bathVF == "f" and bathTopVF == "f":
                print(f"Maria  {x}")
                if bathBigVF == "f":
                    bathVF = "t"
                    bathBigVF = "t"
                    bathBigVFmr = "t"
                    self.signalMaria2_2.emit()
                else:
                    bathVF = "t"
                    bathTopVF = "t"
                    bathTopVFmr = "t"
                    self.signalMaria4_2.emit()
            time.sleep(1.0)


class Worker7(QThread):
    # ----- The procedure is explained in the worker class 1 above, nothing changed except possibly the preference of the bathrooms due to the -----
    # ----- location of the room -----
    signalGabriel1_1 = QtCore.pyqtSignal()
    signalGabriel1_2 = QtCore.pyqtSignal()
    signalGabriel2_1 = QtCore.pyqtSignal()
    signalGabriel2_2 = QtCore.pyqtSignal()
    signalGabriel3_1 = QtCore.pyqtSignal()
    signalGabriel3_2 = QtCore.pyqtSignal()
    signalGabriel4_1 = QtCore.pyqtSignal()
    signalGabriel4_2 = QtCore.pyqtSignal()

    def run(self):
        Gabriel = okaResidentt("Gabriel", "1", "t", "f")
        count = 1
        homeVF = "t"
        bathVF = "f"
        bathBigVFgabi = "f"
        bathSmallVFgabi = "f"
        bathTopVFgabi = "f"
        global bathBigVF
        global bathSmallVF
        global bathTopVF
        while count == 1:
            x = Ui_Form.play4(self, Gabriel)
            if x == "HomeOut" and homeVF == "t" and bathVF == "f":
                print(f"Gabriel  {x}")
                homeVF = "f"
                self.signalGabriel1_1.emit()
            elif x == "HomeIn" and homeVF == "f" and bathVF == "f":
                print(f"Gabriel  {x}")
                homeVF = "t"
                self.signalGabriel1_2.emit()
            elif x == "BathBigOut" and homeVF == "t" and bathVF == "t" and bathBigVFgabi == "t":
                print(f"Gabriel  {x}")
                bathBigVF = "f"
                bathVF = "f"
                bathBigVFgabi = "f"
                self.signalGabriel2_1.emit()
            elif x == "BathBigIn" and homeVF == "t" and bathVF == "f" and bathBigVF == "f":
                print(f"Gabriel  {x}")
                if bathTopVF == "f":
                    bathVF = "t"
                    bathTopVF = "t"
                    bathTopVFgabi = "t"
                    self.signalGabriel4_2.emit()
                else:
                    bathVF = "t"
                    bathBigVF = "t"
                    bathBigVFgabi = "t"
                    self.signalGabriel2_2.emit()
            elif x == "BathSmallOut" and homeVF == "t" and bathSmallVFgabi == "t" and bathVF == "t":
                print(f"Gabriel  {x}")
                bathVF = "f"
                bathSmallVF = "f"
                bathSmallVFgabi = "f"
                self.signalGabriel3_1.emit()
            elif x == "BathSmallIn" and homeVF == "t" and bathVF == "f" and bathSmallVF == "f":
                print(f"Gabriel  {x}")
                if bathTopVF == "f":
                    bathVF = "t"
                    bathTopVF = "t"
                    bathTopVFgabi = "t"
                    self.signalGabriel4_2.emit()
                else:
                    bathVF = "t"
                    bathSmallVF = "t"
                    bathSmallVFgabi = "t"
                    self.signalGabriel3_2.emit()
            elif x == "BathTopOut" and homeVF == "t" and bathTopVFgabi == "t" and bathVF == "t":
                print(f"Gabriel  {x}")
                bathVF = "f"
                bathTopVF = "f"
                bathTopVFgabi = "f"
                self.signalGabriel4_1.emit()
            elif x == "BathTopIn" and homeVF == "t" and bathVF == "f" and bathTopVF == "f":
                print(f"Gabriel  {x}")
                bathVF = "t"
                bathTopVF = "t"
                bathTopVFgabi = "t"
                self.signalGabriel4_2.emit()
            time.sleep(1.0)


class Worker8(QThread):
    # ----- The procedure is explained in the worker class 1 above, nothing changed except possibly the preference of the bathrooms due to the -----
    # ----- location of the room -----
    signalFelipe1_1 = QtCore.pyqtSignal()
    signalFelipe1_2 = QtCore.pyqtSignal()
    signalFelipe2_1 = QtCore.pyqtSignal()
    signalFelipe2_2 = QtCore.pyqtSignal()
    signalFelipe3_1 = QtCore.pyqtSignal()
    signalFelipe3_2 = QtCore.pyqtSignal()
    signalFelipe4_1 = QtCore.pyqtSignal()
    signalFelipe4_2 = QtCore.pyqtSignal()

    def run(self):
        Felipe = okaResidentt("Felipe", "1", "t", "f")
        count = 1
        homeVF = "t"
        bathVF = "f"
        bathBigVFfelp = "f"
        bathSmallVFfelp = "f"
        bathTopVFfelp = "f"
        global bathBigVF
        global bathSmallVF
        global bathTopVF
        while count == 1:
            x = Ui_Form.play2(self, Felipe)
            if x == "HomeOut" and homeVF == "t" and bathVF == "f":
                print(f"Felipe  {x}")
                homeVF = "f"
                self.signalFelipe1_1.emit()
            elif x == "HomeIn" and homeVF == "f" and bathVF == "f":
                print(f"Felipe  {x}")
                homeVF = "t"
                self.signalFelipe1_2.emit()
            elif x == "BathBigOut" and homeVF == "t" and bathVF == "t" and bathBigVFfelp == "t":
                print(f"Felipe  {x}")
                bathBigVF = "f"
                bathVF = "f"
                bathBigVFfelp = "f"
                self.signalFelipe2_1.emit()
            elif x == "BathBigIn" and homeVF == "t" and bathVF == "f" and bathBigVF == "f":
                print(f"Felipe  {x}")
                bathVF = "t"
                bathBigVF = "t"
                bathBigVFfelp = "t"
                self.signalFelipe2_2.emit()
            elif x == "BathSmallOut" and homeVF == "t" and bathSmallVFfelp == "t" and bathVF == "t":
                print(f"Felipe  {x}")
                bathVF = "f"
                bathSmallVF = "f"
                bathSmallVFfelp = "f"
                self.signalFelipe3_1.emit()
            elif x == "BathSmallIn" and homeVF == "t" and bathVF == "f" and bathSmallVF == "f":
                print(f"Felipe  {x}")
                if bathBigVF == "f":
                    bathVF = "t"
                    bathBigVF = "t"
                    bathBigVFfelp = "t"
                    self.signalFelipe2_2.emit()
                else:
                    bathVF = "t"
                    bathSmallVF = "t"
                    bathSmallVFfelp = "t"
                    self.signalFelipe3_2.emit()
            elif x == "BathTopOut" and homeVF == "t" and bathTopVFfelp == "t" and bathVF == "t":
                print(f"Felipe  {x}")
                bathVF = "f"
                bathTopVF = "f"
                bathTopVFfelp = "f"
                self.signalFelipe4_1.emit()
            elif x == "BathTopIn" and homeVF == "t" and bathVF == "f" and bathTopVF == "f":
                print(f"Felipe  {x}")
                if bathBigVF == "f":
                    bathVF = "t"
                    bathBigVF = "t"
                    bathBigVFfelp = "t"
                    self.signalFelipe2_2.emit()
                else:
                    bathVF = "t"
                    bathTopVF = "t"
                    bathTopVFfelp = "t"
                    self.signalFelipe4_2.emit()
            time.sleep(1.0)


class Worker9(QThread):
    # ----- The procedure is explained in the worker class 1 above, nothing changed except possibly the preference of the bathrooms due to the -----
    # ----- location of the room -----
    signalLarinha1_1 = QtCore.pyqtSignal()
    signalLarinha1_2 = QtCore.pyqtSignal()
    signalLarinha2_1 = QtCore.pyqtSignal()
    signalLarinha2_2 = QtCore.pyqtSignal()
    signalLarinha3_1 = QtCore.pyqtSignal()
    signalLarinha3_2 = QtCore.pyqtSignal()
    signalLarinha4_1 = QtCore.pyqtSignal()
    signalLarinha4_2 = QtCore.pyqtSignal()

    def run(self):
        Larinha = okaResidentt("Larinha", "1", "t", "f")
        count = 1
        homeVF = "t"
        bathVF = "f"
        bathBigVFlr = "f"
        bathSmallVFlr = "f"
        bathTopVFlr = "f"
        global bathBigVF
        global bathSmallVF
        global bathTopVF
        while count == 1:
            x = Ui_Form.play3(self, Larinha)
            if x == "HomeOut" and homeVF == "t" and bathVF == "f":
                print(f"Larinha  {x}")
                homeVF = "f"
                self.signalLarinha1_1.emit()
            elif x == "HomeIn" and homeVF == "f" and bathVF == "f":
                print(f"Larinha  {x}")
                homeVF = "t"
                self.signalLarinha1_2.emit()
            elif x == "BathBigOut" and homeVF == "t" and bathVF == "t" and bathBigVFlr == "t":
                print(f"Larinha  {x}")
                bathBigVF = "f"
                bathVF = "f"
                bathBigVFlr = "f"
                self.signalLarinha2_1.emit()
            elif x == "BathBigIn" and homeVF == "t" and bathVF == "f" and bathBigVF == "f":
                print(f"Larinha  {x}")
                if bathSmallVF == "f":
                    bathVF = "t"
                    bathSmallVF = "t"
                    bathSmallVFlr = "t"
                    self.signalLarinha3_2.emit()
                else:
                    bathVF = "t"
                    bathBigVF = "t"
                    bathBigVFlr = "t"
                    self.signalLarinha2_2.emit()
            elif x == "BathSmallOut" and homeVF == "t" and bathSmallVFlr == "t" and bathVF == "t":
                print(f"Larinha  {x}")
                bathVF = "f"
                bathSmallVF = "f"
                bathSmallVFlr = "f"
                self.signalLarinha3_1.emit()
            elif x == "BathSmallIn" and homeVF == "t" and bathVF == "f" and bathSmallVF == "f":
                print(f"Larinha  {x}")
                bathVF = "t"
                bathSmallVF = "t"
                bathSmallVFlr = "t"
                self.signalLarinha3_2.emit()
            elif x == "BathTopOut" and homeVF == "t" and bathTopVFlr == "t" and bathVF == "t":
                print(f"Larinha  {x}")
                bathVF = "f"
                bathTopVF = "f"
                bathTopVFlr = "f"
                self.signalLarinha4_1.emit()
            elif x == "BathTopIn" and homeVF == "t" and bathVF == "f" and bathTopVF == "f":
                print(f"Larinha  {x}")
                if bathSmallVF == "f":
                    bathVF = "t"
                    bathSmallVF = "t"
                    bathSmallVFlr = "t"
                    self.signalLarinha3_2.emit()
                else:
                    bathVF = "t"
                    bathTopVF = "t"
                    bathTopVFlr = "t"
                    self.signalLarinha4_2.emit()
            time.sleep(1.0)


class Worker10(QThread):
    # ----- The procedure is explained in the worker class 1 above, nothing changed except possibly the preference of the bathrooms due to the -----
    # ----- location of the room -----
    signalBruno1_1 = QtCore.pyqtSignal()
    signalBruno1_2 = QtCore.pyqtSignal()
    signalBruno2_1 = QtCore.pyqtSignal()
    signalBruno2_2 = QtCore.pyqtSignal()
    signalBruno3_1 = QtCore.pyqtSignal()
    signalBruno3_2 = QtCore.pyqtSignal()
    signalBruno4_1 = QtCore.pyqtSignal()
    signalBruno4_2 = QtCore.pyqtSignal()

    def run(self):
        Bruno = okaResidentt("Bruno", "1", "t", "f")
        count = 1
        homeVF = "t"
        bathVF = "f"
        bathBigVFbr = "f"
        bathSmallVFbr = "f"
        bathTopVFbr = "f"
        global bathBigVF
        global bathSmallVF
        global bathTopVF
        while count == 1:
            x = Ui_Form.play2(self, Bruno)
            if x == "HomeOut" and homeVF == "t" and bathVF == "f":
                print(f"Bruno  {x}")
                homeVF = "f"
                self.signalBruno1_1.emit()
            elif x == "HomeIn" and homeVF == "f" and bathVF == "f":
                print(f"Bruno  {x}")
                homeVF = "t"
                self.signalBruno1_2.emit()
            elif x == "BathBigOut" and homeVF == "t" and bathVF == "t" and bathBigVFbr == "t":
                print(f"Bruno  {x}")
                bathBigVF = "f"
                bathVF = "f"
                bathBigVFbr = "f"
                self.signalBruno2_1.emit()
            elif x == "BathBigIn" and homeVF == "t" and bathVF == "f" and bathBigVF == "f":
                print(f"Bruno  {x}")
                bathVF = "t"
                bathBigVF = "t"
                bathBigVFbr = "t"
                self.signalBruno2_2.emit()
            elif x == "BathSmallOut" and homeVF == "t" and bathSmallVFbr == "t" and bathVF == "t":
                print(f"Bruno  {x}")
                bathVF = "f"
                bathSmallVF = "f"
                bathSmallVFbr = "f"
                self.signalBruno3_1.emit()
            elif x == "BathSmallIn" and homeVF == "t" and bathVF == "f" and bathSmallVF == "f":
                print(f"Bruno  {x}")
                if bathBigVF == "f":
                    bathVF = "t"
                    bathBigVF = "t"
                    bathBigVFbr = "t"
                    self.signalBruno2_2.emit()
                else:
                    bathVF = "t"
                    bathSmallVF = "t"
                    bathSmallVFbr = "t"
                    self.signalBruno3_2.emit()
            elif x == "BathTopOut" and homeVF == "t" and bathTopVFbr == "t" and bathVF == "t":
                print(f"Bruno  {x}")
                bathVF = "f"
                bathTopVF = "f"
                bathTopVFbr = "f"
                self.signalBruno4_1.emit()
            elif x == "BathTopIn" and homeVF == "t" and bathVF == "f" and bathTopVF == "f":
                print(f"Bruno  {x}")
                if bathBigVF == "f":
                    bathVF = "t"
                    bathBigVF = "t"
                    bathBigVFbr = "t"
                    self.signalBruno2_2.emit()
                else:
                    bathVF = "t"
                    bathTopVF = "t"
                    bathTopVFbr = "t"
                    self.signalBruno4_2.emit()
            time.sleep(1.0)


class Worker11(QThread):
    # ----- The procedure is explained in the worker class 1 above, nothing changed except possibly the preference of the bathrooms due to the -----
    # ----- location of the room -----
    signalJulia1_1 = QtCore.pyqtSignal()
    signalJulia1_2 = QtCore.pyqtSignal()
    signalJulia2_1 = QtCore.pyqtSignal()
    signalJulia2_2 = QtCore.pyqtSignal()
    signalJulia3_1 = QtCore.pyqtSignal()
    signalJulia3_2 = QtCore.pyqtSignal()
    signalJulia4_1 = QtCore.pyqtSignal()
    signalJulia4_2 = QtCore.pyqtSignal()

    def run(self):
        Julia = okaResidentt("Julia", "1", "t", "f")
        count = 1
        homeVF = "t"
        bathVF = "f"
        bathBigVFjul = "f"
        bathSmallVFjul = "f"
        bathTopVFjul = "f"
        global bathBigVF
        global bathSmallVF
        global bathTopVF
        while count == 1:
            x = Ui_Form.play2(self, Julia)
            if x == "HomeOut" and homeVF == "t" and bathVF == "f":
                print(f"Julia  {x}")
                homeVF = "f"
                self.signalJulia1_1.emit()
            elif x == "HomeIn" and homeVF == "f" and bathVF == "f":
                print(f"Julia  {x}")
                homeVF = "t"
                self.signalJulia1_2.emit()
            elif x == "BathBigOut" and homeVF == "t" and bathVF == "t" and bathBigVFjul == "t":
                print(f"Julia  {x}")
                bathBigVF = "f"
                bathVF = "f"
                bathBigVFjul = "f"
                self.signalJulia2_1.emit()
            elif x == "BathBigIn" and homeVF == "t" and bathVF == "f" and bathBigVF == "f":
                print(f"Julia  {x}")
                bathVF = "t"
                bathBigVF = "t"
                bathBigVFjul = "t"
                self.signalJulia2_2.emit()
            elif x == "BathSmallOut" and homeVF == "t" and bathSmallVFjul == "t" and bathVF == "t":
                print(f"Julia  {x}")
                bathVF = "f"
                bathSmallVF = "f"
                bathSmallVFjul = "f"
                self.signalJulia3_1.emit()
            elif x == "BathSmallIn" and homeVF == "t" and bathVF == "f" and bathSmallVF == "f":
                print(f"Julia  {x}")
                if bathBigVF == "f":
                    bathVF = "t"
                    bathBigVF = "t"
                    bathBigVFjul = "t"
                    self.signalJulia2_2.emit()
                else:
                    bathVF = "t"
                    bathSmallVF = "t"
                    bathSmallVFjul = "t"
                    self.signalJulia3_2.emit()
            elif x == "BathTopOut" and homeVF == "t" and bathTopVFjul == "t" and bathVF == "t":
                print(f"Julia  {x}")
                bathVF = "f"
                bathTopVF = "f"
                bathTopVFjul = "f"
                self.signalJulia4_1.emit()
            elif x == "BathTopIn" and homeVF == "t" and bathVF == "f" and bathTopVF == "f":
                print(f"Julia  {x}")
                if bathBigVF == "f":
                    bathVF = "t"
                    bathBigVF = "t"
                    bathBigVFjul = "t"
                    self.signalJulia2_2.emit()
                else:
                    bathVF = "t"
                    bathTopVF = "t"
                    bathTopVFjul = "t"
                    self.signalJulia4_2.emit()
            time.sleep(1.0)


class WorkerLabel(QThread):
    # ----- This thread represents the dynamic sign "running..." on the bottom left, that appears some seconds after clicking on start -----
    signalLabel1_1 = QtCore.pyqtSignal()
    signalLabel2_1 = QtCore.pyqtSignal()
    signalLabel3_1 = QtCore.pyqtSignal()
    signalLabel4_1 = QtCore.pyqtSignal()
    #----- It simply changes between Running. Running.. and Running... -----
    def run(self):
        while (label_ind == "1"):
            self.signalLabel4_1.emit()
            self.signalLabel1_1.emit()
            time.sleep(0.7)
            self.signalLabel2_1.emit()
            time.sleep(0.7)
            self.signalLabel3_1.emit()
            time.sleep(0.7)


class Ui_Form(object):
    #----- The 3 play methods -----
    #----- They simply return a random value between 1 and 200, and every possible outcome has a certain ranges of values, -----
    #----- giving a probability of this outcome, the returned outcomes are used by the Worker Threads to then emit signals based on the outcome
    #----- The only difference between the 3 play methods is the probability of entering each bathroom, based again on the location of the room in the house
    def play2(self, okaResidentt):
        while okaResidentt.x_home == "t" and okaResidentt.x_bathroom == "f":
            k = random.randrange(0, 200)
            if k < 11:
                return "HomeOut"
            elif 10 < k < 21:
                return "HomeIn"
            elif 20 < k < 80:
                return "BathBigOut"
            elif 79 < k < 99:
                return "BathBigIn"
            elif 98 < k < 120:
                return "BathSmallOut"
            elif 119 < k < 129:
                return "BathSmallIn"
            elif 128 < k < 160:
                return "BathTopOut"
            elif 159 < k < 165:
                return "BathTopIn"
            elif k > 164:     #----- this gives a more or less 1/4 probability of nothing happening
                return "else"

    def play3(self, okaResidentt):
        while okaResidentt.x_home == "t" and okaResidentt.x_bathroom == "f":
            k = random.randrange(0, 200)
            if k < 11:
                return "HomeOut"
            elif 10 < k < 21:
                return "HomeIn"
            elif 20 < k < 42:
                return "BathBigOut"
            elif 41 < k < 53:
                return "BathBigIn"
            elif 52 < k < 100:
                return "BathSmallOut"
            elif 99 < k < 150:
                return "BathSmallIn"
            elif 149 < k < 157:
                return "BathTopOut"
            elif 156 < k < 165:
                return "BathTopIn"
            elif k > 164:
                return "else"

    def play4(self, okaResidentt):
        while okaResidentt.x_home == "t" and okaResidentt.x_bathroom == "f":
            k = random.randrange(0, 200)
            if k < 11:
                return "HomeOut"
            elif 10 < k < 21:
                return "HomeIn"
            elif 20 < k < 42:
                return "BathBigOut"
            elif 41 < k < 53:
                return "BathBigIn"
            elif 52 < k < 65:
                return "BathSmallOut"
            elif 64 < k < 75:
                return "BathSmallIn"
            elif 74 < k < 120:
                return "BathTopOut"
            elif 119 < k < 165:
                return "BathTopIn"
            elif k > 164:
                return "else"

    #----- this opens the Resident Window -----
    def openResidentss(self):
        self.window = QtWidgets.QWidget()
        self.ui = Ui_Form()
        self.ui.setupUi(self.window)
        self.window.show()

    #----- when clicking on start, all threads (the 11 residents + the "Running...") are started -----
    def clickedStartBtn(self):
        self.label_ind = "1"
        self.labelRunning.show()
        self.workerLabel = WorkerLabel()
        self.workerLabel.start()
        time.sleep(0.1)
        self.worker = Worker()
        self.worker.start()
        time.sleep(0.5)
        self.worker2 = Worker2()
        self.worker2.start()
        time.sleep(0.25)
        self.worker3 = Worker3()
        self.worker3.start()
        time.sleep(0.2)
        self.worker4 = Worker4()
        self.worker4.start()
        time.sleep(0.39)
        self.worker5 = Worker5()
        self.worker5.start()
        time.sleep(0.33)
        self.worker6 = Worker6()
        self.worker6.start()
        time.sleep(0.72)
        self.worker7 = Worker7()
        self.worker7.start()
        time.sleep(0.17)
        self.worker8 = Worker8()
        self.worker8.start()
        time.sleep(0.41)
        self.worker9 = Worker9()
        self.worker9.start()
        time.sleep(0.22)
        self.worker10 = Worker10()
        self.worker10.start()
        time.sleep(0.39)
        self.worker11 = Worker11()
        self.worker11.start()

        # ----- All the signals from the threads are connected to signals defined below -----
        self.worker.signalMatheus1_1.connect(self.signalMatheus1_1exec)
        self.worker.signalMatheus1_2.connect(self.signalMatheus1_2exec)
        self.worker.signalMatheus2_1.connect(self.signalMatheus2_1exec)
        self.worker.signalMatheus2_2.connect(self.signalMatheus2_2exec)
        self.worker.signalMatheus3_1.connect(self.signalMatheus3_1exec)
        self.worker.signalMatheus3_2.connect(self.signalMatheus3_2exec)
        self.worker.signalMatheus4_1.connect(self.signalMatheus4_1exec)
        self.worker.signalMatheus4_2.connect(self.signalMatheus4_2exec)
        self.worker2.signalLuan1_1.connect(self.signalLuan1_1exec)
        self.worker2.signalLuan1_2.connect(self.signalLuan1_2exec)
        self.worker2.signalLuan2_1.connect(self.signalLuan2_1exec)
        self.worker2.signalLuan2_2.connect(self.signalLuan2_2exec)
        self.worker2.signalLuan3_1.connect(self.signalLuan3_1exec)
        self.worker2.signalLuan3_2.connect(self.signalLuan3_2exec)
        self.worker2.signalLuan4_1.connect(self.signalLuan4_1exec)
        self.worker2.signalLuan4_2.connect(self.signalLuan4_2exec)
        self.worker3.signalIzabella1_1.connect(self.signalIzabella1_1exec)
        self.worker3.signalIzabella1_2.connect(self.signalIzabella1_2exec)
        self.worker3.signalIzabella2_1.connect(self.signalIzabella2_1exec)
        self.worker3.signalIzabella2_2.connect(self.signalIzabella2_2exec)
        self.worker3.signalIzabella3_1.connect(self.signalIzabella3_1exec)
        self.worker3.signalIzabella3_2.connect(self.signalIzabella3_2exec)
        self.worker3.signalIzabella4_1.connect(self.signalIzabella4_1exec)
        self.worker3.signalIzabella4_2.connect(self.signalIzabella4_2exec)
        self.worker4.signalJoao1_1.connect(self.signalJoao1_1exec)
        self.worker4.signalJoao1_2.connect(self.signalJoao1_2exec)
        self.worker4.signalJoao2_1.connect(self.signalJoao2_1exec)
        self.worker4.signalJoao2_2.connect(self.signalJoao2_2exec)
        self.worker4.signalJoao3_1.connect(self.signalJoao3_1exec)
        self.worker4.signalJoao3_2.connect(self.signalJoao3_2exec)
        self.worker4.signalJoao4_1.connect(self.signalJoao4_1exec)
        self.worker4.signalJoao4_2.connect(self.signalJoao4_2exec)
        self.worker5.signalManuela1_1.connect(self.signalManuela1_1exec)
        self.worker5.signalManuela1_2.connect(self.signalManuela1_2exec)
        self.worker5.signalManuela2_1.connect(self.signalManuela2_1exec)
        self.worker5.signalManuela2_2.connect(self.signalManuela2_2exec)
        self.worker5.signalManuela3_1.connect(self.signalManuela3_1exec)
        self.worker5.signalManuela3_2.connect(self.signalManuela3_2exec)
        self.worker5.signalManuela4_1.connect(self.signalManuela4_1exec)
        self.worker5.signalManuela4_2.connect(self.signalManuela4_2exec)
        self.worker6.signalMaria1_1.connect(self.signalMaria1_1exec)
        self.worker6.signalMaria1_2.connect(self.signalMaria1_2exec)
        self.worker6.signalMaria2_1.connect(self.signalMaria2_1exec)
        self.worker6.signalMaria2_2.connect(self.signalMaria2_2exec)
        self.worker6.signalMaria3_1.connect(self.signalMaria3_1exec)
        self.worker6.signalMaria3_2.connect(self.signalMaria3_2exec)
        self.worker6.signalMaria4_1.connect(self.signalMaria4_1exec)
        self.worker6.signalMaria4_2.connect(self.signalMaria4_2exec)
        self.worker7.signalGabriel1_1.connect(self.signalGabriel1_1exec)
        self.worker7.signalGabriel1_2.connect(self.signalGabriel1_2exec)
        self.worker7.signalGabriel2_1.connect(self.signalGabriel2_1exec)
        self.worker7.signalGabriel2_2.connect(self.signalGabriel2_2exec)
        self.worker7.signalGabriel3_1.connect(self.signalGabriel3_1exec)
        self.worker7.signalGabriel3_2.connect(self.signalGabriel3_2exec)
        self.worker7.signalGabriel4_1.connect(self.signalGabriel4_1exec)
        self.worker7.signalGabriel4_2.connect(self.signalGabriel4_2exec)
        self.worker8.signalFelipe1_1.connect(self.signalFelipe1_1exec)
        self.worker8.signalFelipe1_2.connect(self.signalFelipe1_2exec)
        self.worker8.signalFelipe2_1.connect(self.signalFelipe2_1exec)
        self.worker8.signalFelipe2_2.connect(self.signalFelipe2_2exec)
        self.worker8.signalFelipe3_1.connect(self.signalFelipe3_1exec)
        self.worker8.signalFelipe3_2.connect(self.signalFelipe3_2exec)
        self.worker8.signalFelipe4_1.connect(self.signalFelipe4_1exec)
        self.worker8.signalFelipe4_2.connect(self.signalFelipe4_2exec)
        self.worker9.signalLarinha1_1.connect(self.signalLarinha1_1exec)
        self.worker9.signalLarinha1_2.connect(self.signalLarinha1_2exec)
        self.worker9.signalLarinha2_1.connect(self.signalLarinha2_1exec)
        self.worker9.signalLarinha2_2.connect(self.signalLarinha2_2exec)
        self.worker9.signalLarinha3_1.connect(self.signalLarinha3_1exec)
        self.worker9.signalLarinha3_2.connect(self.signalLarinha3_2exec)
        self.worker9.signalLarinha4_1.connect(self.signalLarinha4_1exec)
        self.worker9.signalLarinha4_2.connect(self.signalLarinha4_2exec)
        self.worker10.signalBruno1_1.connect(self.signalBruno1_1exec)
        self.worker10.signalBruno1_2.connect(self.signalBruno1_2exec)
        self.worker10.signalBruno2_1.connect(self.signalBruno2_1exec)
        self.worker10.signalBruno2_2.connect(self.signalBruno2_2exec)
        self.worker10.signalBruno3_1.connect(self.signalBruno3_1exec)
        self.worker10.signalBruno3_2.connect(self.signalBruno3_2exec)
        self.worker10.signalBruno4_1.connect(self.signalBruno4_1exec)
        self.worker10.signalBruno4_2.connect(self.signalBruno4_2exec)
        self.worker11.signalJulia1_1.connect(self.signalJulia1_1exec)
        self.worker11.signalJulia1_2.connect(self.signalJulia1_2exec)
        self.worker11.signalJulia2_1.connect(self.signalJulia2_1exec)
        self.worker11.signalJulia2_2.connect(self.signalJulia2_2exec)
        self.worker11.signalJulia3_1.connect(self.signalJulia3_1exec)
        self.worker11.signalJulia3_2.connect(self.signalJulia3_2exec)
        self.worker11.signalJulia4_1.connect(self.signalJulia4_1exec)
        self.worker11.signalJulia4_2.connect(self.signalJulia4_2exec)
        self.workerLabel.signalLabel1_1.connect(self.signalLabel1)
        self.workerLabel.signalLabel2_1.connect(self.signalLabel2)
        self.workerLabel.signalLabel3_1.connect(self.signalLabel3)
        self.workerLabel.signalLabel4_1.connect(self.signalLabel4)

    # ----- when clicked on stop, everything resets, the bathrooms are marked as free, every resident is marked as at home and not in any bathroom -----
    def stopPressed(self):

        self.labelRunning.hide()  #----- the labeRunning is visble only when the game is running (no visual effect, just necessary for the program to know
        global bathBigVF          #----- whether the stop button was pressed or not
        global bathSmallVF
        global bathTopVF
        bathBigVF = "f"
        bathSmallVF = "f"
        bathTopVF = "f"

        self.worker.bathVF = "f"
        self.worker.bathBigVFmath = "f"
        self.worker.bathSmallVFmath = "f"
        self.worker.bathTopVFmath = "f"

        self.worker2.bathVF = "f"
        self.worker2.bathBigVFluan = "f"
        self.worker2.bathSmallVFluan = "f"
        self.worker2.bathTopVFluan = "f"

        self.worker3.bathVF = "f"
        self.worker3.bathBigVFiza = "f"
        self.worker3.bathSmallVFiza = "f"
        self.worker3.bathTopVFiza = "f"

        self.worker4.bathVF = "f"
        self.worker4.bathBigVFjoao = "f"
        self.worker4.bathSmallVFjoao = "f"
        self.worker4.bathTopVFjoao = "f"

        self.worker5.bathVF = "f"
        self.worker5.bathBigVFmanu = "f"
        self.worker5.bathSmallVFmanu = "f"
        self.worker5.bathTopVFmanu = "f"

        self.worker6.bathVF = "f"
        self.worker6.bathBigVFmr = "f"
        self.worker6.bathSmallVFmr = "f"
        self.worker6.bathTopVFmr = "f"

        self.worker7.bathVF = "f"
        self.worker7.bathBigVFgabi = "f"
        self.worker7.bathSmallVFgabi = "f"
        self.worker7.bathTopVFgabi = "f"

        self.worker8.bathVF = "f"
        self.worker8.bathBigVFfelp = "f"
        self.worker8.bathSmallVFfelp = "f"
        self.worker8.bathTopVFfelp = "f"

        self.worker9.bathVF = "f"
        self.worker9.bathBigVFlr = "f"
        self.worker9.bathSmallVFlr = "f"
        self.worker9.bathTopVFlr = "f"

        self.worker10.bathVF = "f"
        self.worker10.bathBigVFbr = "f"
        self.worker10.bathSmallVFbr = "f"
        self.worker10.bathTopVFbr = "f"

        self.worker11.bathVF = "f"
        self.worker11.bathBigVFjul = "f"
        self.worker11.bathSmallVFjul = "f"
        self.worker11.bathTopVFjul = "f"

        self.matheus_bathBig.setText("---")
        self.matheus_bathSmall.setText("---")
        self.matheus_bathTop.setText("---")
        self.matheus_home.setText("at home")
        self.luan_bathBig.setText("---")
        self.luan_bathSmall.setText("---")
        self.luan_bathTop.setText("---")
        self.luan_home.setText("at home")
        self.iza_bathBig.setText("---")
        self.iza_bathSmall.setText("---")
        self.iza_bathTop.setText("---")
        self.iza_home.setText("at home")
        self.joao_bathBig.setText("---")
        self.joao_bathSmall.setText("---")
        self.joao_bathTop.setText("---")
        self.joao_home.setText("at home")
        self.manuela_bathBig.setText("---")
        self.manuela_bathSmall.setText("---")
        self.manuela_bathTop.setText("---")
        self.manuela_home.setText("at home")
        self.felipe_bathBig.setText("---")
        self.felipe_bathSmall.setText("---")
        self.felipe_bathTop.setText("---")
        self.felipe_home.setText("at home")
        self.larinha_bathBig.setText("---")
        self.larinha_bathSmall.setText("---")
        self.larinha_bathTop.setText("---")
        self.larinha_home.setText("at home")
        self.gabriel_bathBig.setText("---")
        self.gabriel_bathSmall.setText("---")
        self.gabriel_bathTop.setText("---")
        self.gabriel_home.setText("at home")
        self.maria_bathBig.setText("---")
        self.maria_bathSmall.setText("---")
        self.maria_bathTop.setText("---")
        self.maria_home.setText("at home")
        self.julia_bathBig.setText("---")
        self.julia_bathSmall.setText("---")
        self.julia_bathTop.setText("---")
        self.julia_home.setText("at home")
        self.bruno_bathBig.setText("---")
        self.bruno_bathSmall.setText("---")
        self.bruno_bathTop.setText("---")
        self.bruno_home.setText("at home")
        self.matheus_home.setStyleSheet("background-color: lime")
        self.luan_home.setStyleSheet("background-color: lime")
        self.iza_home.setStyleSheet("background-color: lime")
        self.joao_home.setStyleSheet("background-color: lime")
        self.manuela_home.setStyleSheet("background-color: lime")
        self.felipe_home.setStyleSheet("background-color: lime")
        self.larinha_home.setStyleSheet("background-color: lime")
        self.gabriel_home.setStyleSheet("background-color: lime")
        self.maria_home.setStyleSheet("background-color: lime")
        self.julia_home.setStyleSheet("background-color: lime")
        self.bruno_home.setStyleSheet("background-color: lime")

        # ----- all the Threads are terminated and quitted, so they are ready to restart again afterwards, if wished -----
        self.worker.terminate()
        self.worker2.terminate()
        self.worker3.terminate()
        self.worker4.terminate()
        self.worker5.terminate()
        self.worker6.terminate()
        self.worker7.terminate()
        self.worker8.terminate()
        self.worker9.terminate()
        self.worker10.terminate()
        self.worker11.terminate()
        self.workerLabel.terminate()

        self.worker.quit()
        self.worker2.quit()
        self.worker3.quit()
        self.worker4.quit()
        self.worker5.quit()
        self.worker6.quit()
        self.worker7.quit()
        self.worker8.quit()
        self.worker9.quit()
        self.worker10.quit()
        self.worker11.quit()
        self.workerLabel.quit()
        self.labelRunning.hide()

    # ----- The signals, they just change the text and color of labels, depending on the outcome of the play-method above -----
    def signalMatheus1_1exec(self):
        self.matheus_home.setText("Outside")
        self.matheus_home.setStyleSheet("background-color: red")

    def signalMatheus1_2exec(self):
        self.matheus_home.setText("at home")
        self.matheus_home.setStyleSheet("background-color: lime")

    def signalMatheus2_1exec(self):
        self.matheus_bathBig.setText("---")

    def signalMatheus2_2exec(self):
        self.matheus_bathBig.setText("INSIDE")

    def signalMatheus3_1exec(self):
        self.matheus_bathSmall.setText("---")

    def signalMatheus3_2exec(self):
        self.matheus_bathSmall.setText("INSIDE")

    def signalMatheus4_1exec(self):
        self.matheus_bathTop.setText("---")

    def signalMatheus4_2exec(self):
        self.matheus_bathTop.setText("INSIDE")

    def signalLuan1_1exec(self):
        self.luan_home.setText("Outside")
        self.luan_home.setStyleSheet("background-color: red")

    def signalLuan1_2exec(self):
        self.luan_home.setText("at home")
        self.luan_home.setStyleSheet("background-color: lime")

    def signalLuan2_1exec(self):
        self.luan_bathBig.setText("---")

    def signalLuan2_2exec(self):
        self.luan_bathBig.setText("INSIDE")

    def signalLuan3_1exec(self):
        self.luan_bathSmall.setText("---")

    def signalLuan3_2exec(self):
        self.luan_bathSmall.setText("INSIDE")

    def signalLuan4_1exec(self):
        self.luan_bathTop.setText("---")

    def signalLuan4_2exec(self):
        self.luan_bathTop.setText("INSIDE")

    def signalIzabella1_1exec(self):
        self.iza_home.setText("Outside")
        self.iza_home.setStyleSheet("background-color: red")

    def signalIzabella1_2exec(self):
        self.iza_home.setText("at home")
        self.iza_home.setStyleSheet("background-color: lime")

    def signalIzabella2_1exec(self):
        self.iza_bathBig.setText("---")

    def signalIzabella2_2exec(self):
        self.iza_bathBig.setText("INSIDE")

    def signalIzabella3_1exec(self):
        self.iza_bathSmall.setText("---")

    def signalIzabella3_2exec(self):
        self.iza_bathSmall.setText("INSIDE")

    def signalIzabella4_1exec(self):
        self.iza_bathTop.setText("---")

    def signalIzabella4_2exec(self):
        self.iza_bathTop.setText("INSIDE")

    def signalJoao1_1exec(self):
        self.joao_home.setText("Outside")
        self.joao_home.setStyleSheet("background-color: red")

    def signalJoao1_2exec(self):
        self.joao_home.setText("at home")
        self.joao_home.setStyleSheet("background-color: lime")

    def signalJoao2_1exec(self):
        self.joao_bathBig.setText("---")

    def signalJoao2_2exec(self):
        self.joao_bathBig.setText("INSIDE")

    def signalJoao3_1exec(self):
        self.joao_bathSmall.setText("---")

    def signalJoao3_2exec(self):
        self.joao_bathSmall.setText("INSIDE")

    def signalJoao4_1exec(self):
        self.joao_bathTop.setText("---")

    def signalJoao4_2exec(self):
        self.joao_bathTop.setText("INSIDE")

    def signalManuela1_1exec(self):
        self.manuela_home.setText("Outside")
        self.manuela_home.setStyleSheet("background-color: red")

    def signalManuela1_2exec(self):
        self.manuela_home.setText("at home")
        self.manuela_home.setStyleSheet("background-color: lime")

    def signalManuela2_1exec(self):
        self.manuela_bathBig.setText("---")

    def signalManuela2_2exec(self):
        self.manuela_bathBig.setText("INSIDE")

    def signalManuela3_1exec(self):
        self.manuela_bathSmall.setText("---")

    def signalManuela3_2exec(self):
        self.manuela_bathSmall.setText("INSIDE")

    def signalManuela4_1exec(self):
        self.manuela_bathTop.setText("---")

    def signalManuela4_2exec(self):
        self.manuela_bathTop.setText("INSIDE")

    def signalMaria1_1exec(self):
        self.maria_home.setText("Outside")
        self.maria_home.setStyleSheet("background-color: red")

    def signalMaria1_2exec(self):
        self.maria_home.setText("at home")
        self.maria_home.setStyleSheet("background-color: lime")

    def signalMaria2_1exec(self):
        self.maria_bathBig.setText("---")

    def signalMaria2_2exec(self):
        self.maria_bathBig.setText("INSIDE")

    def signalMaria3_1exec(self):
        self.maria_bathSmall.setText("---")

    def signalMaria3_2exec(self):
        self.maria_bathSmall.setText("INSIDE")

    def signalMaria4_1exec(self):
        self.maria_bathTop.setText("---")

    def signalMaria4_2exec(self):
        self.maria_bathTop.setText("INSIDE")

    def signalGabriel1_1exec(self):
        self.gabriel_home.setText("Outside")
        self.gabriel_home.setStyleSheet("background-color: red")

    def signalGabriel1_2exec(self):
        self.gabriel_home.setText("at home")
        self.gabriel_home.setStyleSheet("background-color: lime")

    def signalGabriel2_1exec(self):
        self.gabriel_bathBig.setText("---")

    def signalGabriel2_2exec(self):
        self.gabriel_bathBig.setText("INSIDE")

    def signalGabriel3_1exec(self):
        self.gabriel_bathSmall.setText("---")

    def signalGabriel3_2exec(self):
        self.gabriel_bathSmall.setText("INSIDE")

    def signalGabriel4_1exec(self):
        self.gabriel_bathTop.setText("---")

    def signalGabriel4_2exec(self):
        self.gabriel_bathTop.setText("INSIDE")

    def signalFelipe1_1exec(self):
        self.felipe_home.setText("Outside")
        self.felipe_home.setStyleSheet("background-color: red")

    def signalFelipe1_2exec(self):
        self.felipe_home.setText("at home")
        self.felipe_home.setStyleSheet("background-color: lime")

    def signalFelipe2_1exec(self):
        self.felipe_bathBig.setText("---")

    def signalFelipe2_2exec(self):
        self.felipe_bathBig.setText("INSIDE")

    def signalFelipe3_1exec(self):
        self.felipe_bathSmall.setText("---")

    def signalFelipe3_2exec(self):
        self.felipe_bathSmall.setText("INSIDE")

    def signalFelipe4_1exec(self):
        self.felipe_bathTop.setText("---")

    def signalFelipe4_2exec(self):
        self.felipe_bathTop.setText("INSIDE")

    def signalLarinha1_1exec(self):
        self.larinha_home.setText("Outside")
        self.larinha_home.setStyleSheet("background-color: red")

    def signalLarinha1_2exec(self):
        self.larinha_home.setText("at home")
        self.larinha_home.setStyleSheet("background-color: lime")

    def signalLarinha2_1exec(self):
        self.larinha_bathBig.setText("---")

    def signalLarinha2_2exec(self):
        self.larinha_bathBig.setText("INSIDE")

    def signalLarinha3_1exec(self):
        self.larinha_bathSmall.setText("---")

    def signalLarinha3_2exec(self):
        self.larinha_bathSmall.setText("INSIDE")

    def signalLarinha4_1exec(self):
        self.larinha_bathTop.setText("---")

    def signalLarinha4_2exec(self):
        self.larinha_bathTop.setText("INSIDE")

    def signalBruno1_1exec(self):
        self.bruno_home.setText("Outside")
        self.bruno_home.setStyleSheet("background-color: red")

    def signalBruno1_2exec(self):
        self.bruno_home.setText("at home")
        self.bruno_home.setStyleSheet("background-color: lime")

    def signalBruno2_1exec(self):
        self.bruno_bathBig.setText("---")

    def signalBruno2_2exec(self):
        self.bruno_bathBig.setText("INSIDE")

    def signalBruno3_1exec(self):
        self.bruno_bathSmall.setText("---")

    def signalBruno3_2exec(self):
        self.bruno_bathSmall.setText("INSIDE")

    def signalBruno4_1exec(self):
        self.bruno_bathTop.setText("---")

    def signalBruno4_2exec(self):
        self.bruno_bathTop.setText("INSIDE")

    def signalJulia1_1exec(self):
        self.julia_home.setText("Outside")
        self.julia_home.setStyleSheet("background-color: red")

    def signalJulia1_2exec(self):
        self.julia_home.setText("at home")
        self.julia_home.setStyleSheet("background-color: lime")

    def signalJulia2_1exec(self):
        self.julia_bathBig.setText("---")

    def signalJulia2_2exec(self):
        self.julia_bathBig.setText("INSIDE")

    def signalJulia3_1exec(self):
        self.julia_bathSmall.setText("---")

    def signalJulia3_2exec(self):
        self.julia_bathSmall.setText("INSIDE")

    def signalJulia4_1exec(self):
        self.julia_bathTop.setText("---")

    def signalJulia4_2exec(self):
        self.julia_bathTop.setText("INSIDE")

    def signalLabel1(self):
        self.labelRunning.setText("Running.")

    def signalLabel2(self):
        self.labelRunning.setText("Running..")

    def signalLabel3(self):
        self.labelRunning.setText("Running...")

    def signalLabel4(self):
        self.labelRunning.show()



    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(763, 648)

        # ----- The background image -----
        self.photo = QtWidgets.QLabel(Form)
        self.photo.setGeometry(QtCore.QRect(0, 0, 852, 653))
        self.photo.setText("")
        self.photo.setPixmap(QtGui.QPixmap("./pics/Fundo.png"))
        self.photo.setScaledContents(True)
        self.photo.setObjectName("photo")

        self.textBrowser = QtWidgets.QTextBrowser(Form)
        self.textBrowser.setGeometry(QtCore.QRect(160, 90, 111, 541))
        self.textBrowser.setObjectName("textBrowser")
        self.textBrowser_2 = QtWidgets.QTextBrowser(Form)
        self.textBrowser_2.setGeometry(QtCore.QRect(270, 40, 461, 41))
        self.textBrowser_2.setObjectName("textBrowser_2")
        self.julia_home = QtWidgets.QLabel(Form)
        self.julia_home.setGeometry(QtCore.QRect(290, 90, 91, 41))
        self.julia_home.setObjectName("julia_home")
        self.julia_bathBig = QtWidgets.QLabel(Form)
        self.julia_bathBig.setGeometry(QtCore.QRect(390, 90, 91, 41))
        self.julia_bathBig.setObjectName("julia_bathBig")
        self.julia_bathBig.setStyleSheet("color : white")
        self.julia_bathSmall = QtWidgets.QLabel(Form)
        self.julia_bathSmall.setGeometry(QtCore.QRect(520, 90, 91, 41))
        self.julia_bathSmall.setObjectName("julia_bathSmall")
        self.julia_bathSmall.setStyleSheet("color : white")
        self.julia_bathTop = QtWidgets.QLabel(Form)
        self.julia_bathTop.setGeometry(QtCore.QRect(660, 90, 91, 41))
        self.julia_bathTop.setObjectName("julia_bathTop")
        self.julia_bathTop.setStyleSheet("color : white")
        self.bruno_home = QtWidgets.QLabel(Form)
        self.bruno_home.setGeometry(QtCore.QRect(290, 140, 91, 41))
        self.bruno_home.setObjectName("bruno_home")
        self.bruno_bathTop = QtWidgets.QLabel(Form)
        self.bruno_bathTop.setGeometry(QtCore.QRect(660, 140, 91, 41))
        self.bruno_bathTop.setObjectName("bruno_bathTop")
        self.bruno_bathTop.setStyleSheet("color : white")
        self.bruno_bathSmall = QtWidgets.QLabel(Form)
        self.bruno_bathSmall.setGeometry(QtCore.QRect(520, 140, 91, 41))
        self.bruno_bathSmall.setObjectName("bruno_bathSmall")
        self.bruno_bathSmall.setStyleSheet("color : white")
        self.bruno_bathBig = QtWidgets.QLabel(Form)
        self.bruno_bathBig.setGeometry(QtCore.QRect(390, 140, 91, 41))
        self.bruno_bathBig.setObjectName("bruno_bathBig")
        self.bruno_bathBig.setStyleSheet("color : white")
        self.larinha_home = QtWidgets.QLabel(Form)
        self.larinha_home.setGeometry(QtCore.QRect(290, 190, 91, 41))
        self.larinha_home.setObjectName("larinha_home")
        self.larinha_bathTop = QtWidgets.QLabel(Form)
        self.larinha_bathTop.setGeometry(QtCore.QRect(660, 190, 91, 41))
        self.larinha_bathTop.setObjectName("larinha_bathTop")
        self.larinha_bathTop.setStyleSheet("color : white")
        self.larinha_bathSmall = QtWidgets.QLabel(Form)
        self.larinha_bathSmall.setGeometry(QtCore.QRect(520, 190, 91, 41))
        self.larinha_bathSmall.setObjectName("larinha_bathSmall")
        self.larinha_bathSmall.setStyleSheet("color : white")
        self.larinha_bathBig = QtWidgets.QLabel(Form)
        self.larinha_bathBig.setGeometry(QtCore.QRect(390, 190, 91, 41))
        self.larinha_bathBig.setObjectName("larinha_bathBig")
        self.larinha_bathBig.setStyleSheet("color : white")
        self.felipe_home = QtWidgets.QLabel(Form)
        self.felipe_home.setGeometry(QtCore.QRect(290, 230, 91, 41))
        self.felipe_home.setObjectName("felipe_home")
        self.felipe_bathTop = QtWidgets.QLabel(Form)
        self.felipe_bathTop.setGeometry(QtCore.QRect(660, 230, 91, 41))
        self.felipe_bathTop.setObjectName("felipe_bathTop")
        self.felipe_bathTop.setStyleSheet("color : white")
        self.gabriel_bathSmall = QtWidgets.QLabel(Form)
        self.gabriel_bathSmall.setGeometry(QtCore.QRect(520, 280, 91, 41))
        self.gabriel_bathSmall.setObjectName("gabriel_bathSmall")
        self.gabriel_bathSmall.setStyleSheet("color : white")
        self.gabriel_bathBig = QtWidgets.QLabel(Form)
        self.gabriel_bathBig.setGeometry(QtCore.QRect(390, 280, 91, 41))
        self.gabriel_bathBig.setObjectName("gabriel_bathBig")
        self.gabriel_bathBig.setStyleSheet("color : white")
        self.joao_home = QtWidgets.QLabel(Form)
        self.joao_home.setGeometry(QtCore.QRect(290, 330, 91, 41))
        self.joao_home.setObjectName("joao_home")
        self.joao_bathSmall = QtWidgets.QLabel(Form)
        self.joao_bathSmall.setGeometry(QtCore.QRect(520, 330, 91, 41))
        self.joao_bathSmall.setObjectName("joao_bathSmall")
        self.joao_bathSmall.setStyleSheet("color : white")
        self.joao_bathBig = QtWidgets.QLabel(Form)
        self.joao_bathBig.setGeometry(QtCore.QRect(390, 330, 91, 41))
        self.joao_bathBig.setObjectName("joao_bathBig")
        self.joao_bathBig.setStyleSheet("color : white")
        self.gabriel_bathTop = QtWidgets.QLabel(Form)
        self.gabriel_bathTop.setGeometry(QtCore.QRect(660, 280, 91, 41))
        self.gabriel_bathTop.setObjectName("gabriel_bathTop")
        self.gabriel_bathTop.setStyleSheet("color : white")
        self.felipe_bathSmall = QtWidgets.QLabel(Form)
        self.felipe_bathSmall.setGeometry(QtCore.QRect(520, 230, 91, 41))
        self.felipe_bathSmall.setObjectName("felipe_bathSmall")
        self.felipe_bathSmall.setStyleSheet("color : white")
        self.gabriel_home = QtWidgets.QLabel(Form)
        self.gabriel_home.setGeometry(QtCore.QRect(290, 280, 91, 41))
        self.gabriel_home.setObjectName("gabriel_home")
        self.joao_bathTop = QtWidgets.QLabel(Form)
        self.joao_bathTop.setGeometry(QtCore.QRect(660, 330, 91, 41))
        self.joao_bathTop.setObjectName("joao_bathTop")
        self.joao_bathTop.setStyleSheet("color : white")
        self.felipe_bathBig = QtWidgets.QLabel(Form)
        self.felipe_bathBig.setGeometry(QtCore.QRect(390, 230, 91, 41))
        self.felipe_bathBig.setObjectName("felipe_bathBig")
        self.felipe_bathBig.setStyleSheet("color : white")
        self.luan_home = QtWidgets.QLabel(Form)
        self.luan_home.setGeometry(QtCore.QRect(290, 370, 91, 41))
        self.luan_home.setObjectName("luan_home")
        self.luan_bathTop = QtWidgets.QLabel(Form)
        self.luan_bathTop.setGeometry(QtCore.QRect(660, 370, 91, 41))
        self.luan_bathTop.setObjectName("luan_bathTop")
        self.luan_bathTop.setStyleSheet("color : white")
        self.iza_bathSmall = QtWidgets.QLabel(Form)
        self.iza_bathSmall.setGeometry(QtCore.QRect(520, 420, 91, 41))
        self.iza_bathSmall.setObjectName("iza_bathSmall")
        self.iza_bathSmall.setStyleSheet("color : white")
        self.iza_bathBig = QtWidgets.QLabel(Form)
        self.iza_bathBig.setGeometry(QtCore.QRect(390, 420, 91, 41))
        self.iza_bathBig.setObjectName("iza_bathBig")
        self.iza_bathBig.setStyleSheet("color : white")
        self.maria_home = QtWidgets.QLabel(Form)
        self.maria_home.setGeometry(QtCore.QRect(290, 470, 91, 41))
        self.maria_home.setObjectName("maria_home")
        self.maria_bathSmall = QtWidgets.QLabel(Form)
        self.maria_bathSmall.setGeometry(QtCore.QRect(520, 470, 91, 41))
        self.maria_bathSmall.setObjectName("maria_bathSmall")
        self.maria_bathSmall.setStyleSheet("color : white")
        self.maria_bathBig = QtWidgets.QLabel(Form)
        self.maria_bathBig.setGeometry(QtCore.QRect(390, 470, 91, 41))
        self.maria_bathBig.setObjectName("maria_bathBig")
        self.maria_bathBig.setStyleSheet("color : white")
        self.iza_bathTop = QtWidgets.QLabel(Form)
        self.iza_bathTop.setGeometry(QtCore.QRect(660, 420, 91, 41))
        self.iza_bathTop.setObjectName("iza_bathTop")
        self.iza_bathTop.setStyleSheet("color : white")
        self.luan_bathSmall = QtWidgets.QLabel(Form)
        self.luan_bathSmall.setGeometry(QtCore.QRect(520, 370, 91, 41))
        self.luan_bathSmall.setObjectName("luan_bathSmall")
        self.luan_bathSmall.setStyleSheet("color : white")
        self.iza_home = QtWidgets.QLabel(Form)
        self.iza_home.setGeometry(QtCore.QRect(290, 420, 91, 41))
        self.iza_home.setObjectName("iza_home")
        self.maria_bathTop = QtWidgets.QLabel(Form)
        self.maria_bathTop.setGeometry(QtCore.QRect(660, 470, 91, 41))
        self.maria_bathTop.setObjectName("maria_bathTop")
        self.maria_bathTop.setStyleSheet("color : white")
        self.luan_bathBig = QtWidgets.QLabel(Form)
        self.luan_bathBig.setGeometry(QtCore.QRect(390, 370, 91, 41))
        self.luan_bathBig.setObjectName("luan_bathBig")
        self.luan_bathBig.setStyleSheet("color : white")
        self.matheus_home = QtWidgets.QLabel(Form)
        self.matheus_home.setGeometry(QtCore.QRect(290, 520, 91, 41))
        self.matheus_home.setObjectName("matheus_home")
        self.matheus_bathTop = QtWidgets.QLabel(Form)
        self.matheus_bathTop.setGeometry(QtCore.QRect(660, 520, 91, 41))
        self.matheus_bathTop.setObjectName("matheus_bathTop")
        self.matheus_bathTop.setStyleSheet("color : white")
        self.manuela_bathTop = QtWidgets.QLabel(Form)
        self.manuela_bathTop.setGeometry(QtCore.QRect(660, 570, 91, 41))
        self.manuela_bathTop.setObjectName("manuela_bathTop")
        self.manuela_bathTop.setStyleSheet("color : white")
        self.manuela_bathSmall = QtWidgets.QLabel(Form)
        self.manuela_bathSmall.setGeometry(QtCore.QRect(520, 570, 91, 41))
        self.manuela_bathSmall.setObjectName("manuela_bathSmall")
        self.manuela_bathSmall.setStyleSheet("color : white")
        self.matheus_bathBig = QtWidgets.QLabel(Form)
        self.matheus_bathBig.setGeometry(QtCore.QRect(390, 520, 91, 41))
        self.matheus_bathBig.setObjectName("matheus_bathBig")
        self.matheus_bathBig.setStyleSheet("color : white")
        self.manuela_home = QtWidgets.QLabel(Form)
        self.manuela_home.setGeometry(QtCore.QRect(290, 570, 91, 41))
        self.manuela_home.setObjectName("manuela_home")
        self.manuela_bathBig = QtWidgets.QLabel(Form)
        self.manuela_bathBig.setGeometry(QtCore.QRect(390, 570, 91, 41))
        self.manuela_bathBig.setObjectName("manuela_bathBig")
        self.manuela_bathBig.setStyleSheet("color : white")
        self.matheus_bathSmall = QtWidgets.QLabel(Form)
        self.matheus_bathSmall.setGeometry(QtCore.QRect(520, 520, 91, 41))
        self.matheus_bathSmall.setObjectName("matheus_bathSmall")
        self.matheus_bathSmall.setStyleSheet("color : white")

        # ----- The Stop Button -----
        self.buttonResidentsTest = QtWidgets.QPushButton(Form, clicked=lambda: self.stopPressed())
        self.buttonResidentsTest.setText("Stop")
        self.buttonResidentsTest.setFont(QFont('Arial', 15))
        self.buttonResidentsTest.setGeometry(0, 250, 150, 50)
        self.buttonResidentsTest.setStyleSheet("QPushButton"
                                               "{"
                                               "background-color : white;"
                                               "border :7px solid ;"
                                               "border-top-color : red; "
                                               "border-left-color :red;"
                                               "border-right-color :red;"
                                               "border-bottom-color : red"
                                               "}"
                                               "QPushButton::pressed"
                                               "{"
                                               "border :7px solid ;"
                                               "border-top-color : black; "
                                               "border-left-color :black;"
                                               "border-right-color :black;"
                                               "border-bottom-color : black"
                                               "}")

        # ----- The Start Button -----
        self.buttonResidentsStart = QtWidgets.QPushButton(Form,
                                                           clicked=lambda: self.clickedStartBtn())
        self.buttonResidentsStart.setText("Start")
        self.buttonResidentsStart.setFont(QFont('Arial', 15))
        self.buttonResidentsStart.setGeometry(0, 180, 150, 50)
        self.buttonResidentsStart.setStyleSheet("QPushButton"
                                                 "{"
                                                 "background-color : white;"
                                                 "border :7px solid ;"
                                                 "border-top-color : lime; "
                                                 "border-left-color :lime;"
                                                 "border-right-color :lime;"
                                                 "border-bottom-color : lime"
                                                 "}"
                                                 "QPushButton::pressed"
                                                 "{"
                                                 "border :7px solid ;"
                                                 "border-top-color : black; "
                                                 "border-left-color :black;"
                                                 "border-right-color :black;"
                                                 "border-bottom-color : black"
                                                 "}"
                                                 )
        self.labelRunning = QLabel(Form)
        self.labelRunning.setText("Running...")
        self.labelRunning.setGeometry(20, 400, 200, 100)
        self.labelRunning.setFont(QFont('Arial', 15))
        self.labelRunning.setStyleSheet("background-image : url(C:\\Users\\Janny\\Desktop\\FundoBF.png)")
        self.labelRunning.hide()

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Residents", "Residents"))

        self.textBrowser.setHtml(_translate("Form",
                                            "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                            "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                            "p, li { white-space: pre-wrap; }\n"
                                            "</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:7.8pt; font-weight:400; font-style:normal;\">\n"
                                            "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt;\">Julia:</span></p>\n"
                                            "<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12pt;\"><br /></p>\n"
                                            "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt;\">Bruno:</span></p>\n"
                                            "<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12pt;\"><br /></p>\n"
                                            "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt;\">Larinha:</span></p>\n"
                                            "<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12pt;\"><br /></p>\n"
                                            "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt;\">Felipe:</span></p>\n"
                                            "<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12pt;\"><br /></p>\n"
                                            "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt;\">Gabriel:</span></p>\n"
                                            "<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12pt;\"><br /></p>\n"
                                            "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt;\">Joao:</span></p>\n"
                                            "<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12pt;\"><br /></p>\n"
                                            "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt;\">Luan:</span></p>\n"
                                            "<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12pt;\"><br /></p>\n"
                                            "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt;\">Izabella:</span></p>\n"
                                            "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt;\"><br />Maria:</span></p>\n"
                                            "<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12pt;\"><br /></p>\n"
                                            "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt;\">Matheus:</span></p>\n"
                                            "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt;\"><br />Manuela:</span></p></body></html>"))
        self.textBrowser_2.setHtml(_translate("Form",
                                              "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                              "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                              "p, li { white-space: pre-wrap; }\n"
                                              "</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:7.8pt; font-weight:400; font-style:normal;\">\n"
                                              "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt;\">   atHome      BathBig       BathSmall        BathTop</span></p></body></html>"))
        self.julia_home.setText(_translate("Form", "at home"))
        self.julia_bathBig.setText(_translate("Form", "---"))
        self.julia_bathSmall.setText(_translate("Form", "---"))
        self.julia_bathTop.setText(_translate("Form", "---"))
        self.bruno_home.setText(_translate("Form", "at home"))
        self.bruno_bathTop.setText(_translate("Form", "---"))
        self.bruno_bathSmall.setText(_translate("Form", "---"))
        self.bruno_bathBig.setText(_translate("Form", "---"))
        self.larinha_home.setText(_translate("Form", "at home"))
        self.larinha_bathTop.setText(_translate("Form", "---"))
        self.larinha_bathSmall.setText(_translate("Form", "---"))
        self.larinha_bathBig.setText(_translate("Form", "---"))
        self.felipe_home.setText(_translate("Form", "at home"))
        self.felipe_bathTop.setText(_translate("Form", "---"))
        self.gabriel_bathSmall.setText(_translate("Form", "---"))
        self.gabriel_bathBig.setText(_translate("Form", "---"))
        self.joao_home.setText(_translate("Form", "at home"))
        self.joao_bathSmall.setText(_translate("Form", "---"))
        self.joao_bathBig.setText(_translate("Form", "---"))
        self.gabriel_bathTop.setText(_translate("Form", "---"))
        self.felipe_bathSmall.setText(_translate("Form", "---"))
        self.gabriel_home.setText(_translate("Form", "at home"))
        self.joao_bathTop.setText(_translate("Form", "---"))
        self.felipe_bathBig.setText(_translate("Form", "---"))
        self.luan_home.setText(_translate("Form", "at home"))
        self.luan_bathTop.setText(_translate("Form", "---"))
        self.iza_bathSmall.setText(_translate("Form", "---"))
        self.iza_bathBig.setText(_translate("Form", "---"))
        self.maria_home.setText(_translate("Form", "at home"))
        self.maria_bathSmall.setText(_translate("Form", "---"))
        self.maria_bathBig.setText(_translate("Form", "---"))
        self.iza_bathTop.setText(_translate("Form", "---"))
        self.luan_bathSmall.setText(_translate("Form", "---"))
        self.iza_home.setText(_translate("Form", "at home"))
        self.maria_bathTop.setText(_translate("Form", "---"))
        self.luan_bathBig.setText(_translate("Form", "---"))
        self.matheus_home.setText(_translate("Form", "at home"))
        self.matheus_bathTop.setText(_translate("Form", "---"))
        self.manuela_bathTop.setText(_translate("Form", "---"))
        self.manuela_bathSmall.setText(_translate("Form", "---"))
        self.matheus_bathBig.setText(_translate("Form", "---"))
        self.manuela_home.setText(_translate("Form", "at home"))
        self.manuela_bathBig.setText(_translate("Form", "---"))
        self.matheus_bathSmall.setText(_translate("Form", "---"))
        self.julia_home.setStyleSheet("background-color: lime")
        self.luan_home.setStyleSheet("background-color: lime")
        self.maria_home.setStyleSheet("background-color: lime")
        self.joao_home.setStyleSheet("background-color: lime")
        self.iza_home.setStyleSheet("background-color: lime")
        self.larinha_home.setStyleSheet("background-color: lime")
        self.bruno_home.setStyleSheet("background-color: lime")
        self.gabriel_home.setStyleSheet("background-color: lime")
        self.matheus_home.setStyleSheet("background-color: lime")
        self.felipe_home.setStyleSheet("background-color: lime")
        self.manuela_home.setStyleSheet("background-color: lime")


# ----- The run method if it is wished to only run this window, not the entire program
if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())
